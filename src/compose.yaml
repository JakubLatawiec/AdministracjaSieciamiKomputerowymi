services:
  #Kontener bazy danych:
  db:
    container_name: "db"
    build:
      context: ./db #Folder z plikami
      dockerfile: Dockerfile #Nazwa pliku budującego obraz
    networks:
      backend: #Przypisanie do sieci "backend"
        ipv4_address: 172.38.117.10 #Przypisanie statycznego adresu ip
      phpmyadmin: #Przypisanie do sieci "frontend"
        ipv4_address: 172.18.117.10 #Przypisanie statycznego adresu ip
    environment:
      - MYSQL_ROOT_PASSWORD="Zaq12wsx" #Przesłanie zmiennej środowiskowej z hasłem dla root
  
  #Kontener API:
  backend:
    container_name: "backend"
    build:
      context: ./server #Folder z plikami
      dockerfile: Dockerfile #Nazwa pliku budującego obraz
    networks:
      backend: #Przypisanie do sieci "backend"
        ipv4_address: 172.38.117.5 #Przypisanie statycznego adresu ip
      frontend: #Przypisanie do sieci "frontend"
        ipv4_address: 172.58.117.5 #Przypisanie statycznego adresu ip
    env_file:
      - ./server/.env #Przesłanie pliku ze zmiennymi środowkowymi
    volumes:
      - ./server/src:/app/src #Przypisanie wolumena
    depends_on:
      - db #Poczekanie na załadowanie kontenera bazy danych

  #Kontener aplikacji React:  
  frontend:
    container_name: "frontend"
    build:
      context: ./client #Folder z plikami
      dockerfile: Dockerfile #Nazwa pliku budującego obraz
    ports:
      - 3333:3000 #Upublicznienie portu 3000 i przekierowanie go na port 3333
    networks:
      frontend: #Przypisanie do sieci "frontend"
        ipv4_address: 172.58.117.10 #Przypisanie statycznego adresu ip
    environment: #Ustawnienie zmiennych środowiskowych aplikacji
      - CI=true
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
    volumes: #Podpięcie wolumenów
      - ./client/src:/app/src
      - ./client/public:/app/public
    
  #Kontener phpmyadmin:
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: "phpmyadmin"
    environment:
      PMA_HOST: db
    networks:
      - proxy
      - phpmyadmin
    labels:
      traefik.enable: true

      traefik.docker.network: proxy

      traefik.http.routers.phpmyadmin.entrypoints: web
      traefik.http.routers.phpmyadmin.rule: Host(`phpmyadmin.jlatawiec-local.duckdns.org`)

      #HTTPS:
      traefik.http.routers.phpmyadmin-secure.entrypoints: websecure
      traefik.http.routers.phpmyadmin-secure.rule: Host(`phpmyadmin.jlatawiec-local.duckdns.org`)
      traefik.http.routers.phpmyadmin-secure.tls: true
      traefik.http.routers.phpmyadmin-secure.tls.certresolver: letsencrypt
      "traefik.http.routers.phpmyadmin-secure.tls.domains[0].main": jlatawiec-local.duckdns.org
      "traefik.http.routers.phpmyadmin-secure.tls.domains[0].sans": "*.jlatawiec-local.duckdns.org"
      
    depends_on:
      - db


#Tworzenie customowych sieci
networks:
  frontend: #Sieć o nazwie frontend
    name: frontend
    ipam:
      driver: default
      config:
        - subnet: 172.58.117.0/24 #Adresacja sieci
  
  backend: #Sieć o nazwie backend
    name: backend
    ipam:
      driver: default
      config:
        - subnet: 172.38.117.0/24 #Adresacja sieci
  
  proxy: #Sieć o nazwie proxy
    name: proxy
    ipam:
      driver: default
      config:
        - subnet: 172.28.117.0/24 #Adresacja sieci

  phpmyadmin: #Sieć o nazwie phpmyadmin
    name: phpmyadmin
    ipam:
      driver: default
      config:
        - subnet: 172.18.117.0/24 #Adresacja sieci
    